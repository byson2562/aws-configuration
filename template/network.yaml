AWSTemplateFormatVersion: '2010-09-09'
Resources:
  EC2VPCDevelopment0001:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.1.0/24
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: !Ref AWS::NoValue
      Tags: 
        - Key: Name
          Value: EC2::VPC::Development0001

  EC2InternetGatewayDevelopment0001:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: EC2::InternetGateway::Development0001

  EC2VPCGatewayAttachmentDevelopment0001:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref EC2InternetGatewayDevelopment0001
      VpcId: !Ref EC2VPCDevelopment0001
      # VpnGatewayId: String

  EC2RouteTableDevelopment0001:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::RouteTable::Development0001

  EC2RouteDevelopment0001:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationIpv6CidrBlock: String
      # EgressOnlyInternetGatewayId: String
      GatewayId: !Ref EC2InternetGatewayDevelopment0001
      # InstanceId: String
      # NatGatewayId: String
      # NetworkInterfaceId: String
      RouteTableId: !Ref EC2RouteTableDevelopment0001
      # VpcPeeringConnectionId: String

  EC2SubnetDevelopment0001:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1a
      CidrBlock: '192.168.1.0/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0001

  EC2SubnetDevelopment0002:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1c
      CidrBlock: '192.168.1.32/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0002

  EC2SubnetDevelopment0003:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1a
      CidrBlock: '192.168.1.64/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0003

  EC2SubnetDevelopment0004:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1c
      CidrBlock: '192.168.1.96/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0004

  EC2SubnetDevelopment0005:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1a
      CidrBlock: '192.168.1.128/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0005

  EC2SubnetDevelopment0006:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1c
      CidrBlock: '192.168.1.160/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0006

  EC2SubnetDevelopment0007:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1a
      CidrBlock: '192.168.1.192/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0007

  EC2SubnetDevelopment0008:
    Type: AWS::EC2::Subnet
    Properties: 
      # AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: ap-northeast-1c
      CidrBlock: '192.168.1.224/27'
      # Ipv6CidrBlock: 'String'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref EC2VPCDevelopment0001
      Tags: 
        - Key: Name
          Value: EC2::Subnet::Development0008

  EC2SubnetRouteTableAssociationDevelopment0001:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref EC2RouteTableDevelopment0001
      SubnetId: !Ref EC2SubnetDevelopment0001

  EC2SubnetRouteTableAssociationDevelopment0002:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref EC2RouteTableDevelopment0001
      SubnetId: !Ref EC2SubnetDevelopment0002

  EC2SubnetRouteTableAssociationDevelopment0003:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref EC2RouteTableDevelopment0001
      SubnetId: !Ref EC2SubnetDevelopment0005

  EC2SubnetRouteTableAssociationDevelopment0004:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref EC2RouteTableDevelopment0001
      SubnetId: !Ref EC2SubnetDevelopment0006

  EC2SecurityGroupDevelopmentSSHFromPublic0001:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: SSHFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentSSHFromPublic0001

  EC2SecurityGroupDevelopmentHTTPFromPublic0002:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: HTTPFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentHTTPFromPublic0002

  EC2SecurityGroupDevelopmentPostgresFromPublic0003:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: PostgresFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 5432
          ToPort: 5432
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentPostgresFromPublic0003

  EC2SecurityGroupDevelopmentRDPFromPublic0004:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: RDPFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 3389
          ToPort: 3389
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentRDPFromPublic0004

  EC2SecurityGroupDevelopmentWinRMFromPublic0005:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: WinRMFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 5985
          ToPort: 5985
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentWinRMFromPublic0006

  EC2SecurityGroupDevelopmentJenkinsFromPublic0006:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: JenkinsFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 8080
          ToPort: 8080
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentJenkinsFromPublic0007

  EC2SecurityGroupDevelopmentMySQLFromPublic0007:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # GroupName: String
      GroupDescription: MySQLFromPublic
      # SecurityGroupEgress:
      #   - Security Group Rule
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: 'tcp'
          FromPort: 3306
          ToPort: 3306
      VpcId: !Ref EC2VPCDevelopment0001
      Tags:
        - Key: Name
          Value: EC2::SecurityGroup::DevelopmentMySQLFromPublic0007

  # EC2EIPDevelopment0001:
  #   Type: AWS::EC2::EIP
  #   Properties: 
  #     # InstanceId: String
  #     Domain: 'vpc'

  # EC2NatGatewayDevelopment0001:
  #   Type: AWS::EC2::NatGateway
  #   Properties: 
  #     AllocationId: !GetAtt EC2EIPDevelopment0001.AllocationId
  #     SubnetId: !Ref EC2SubnetDevelopment0001
  #     Tags:
  #       - Key: Name
  #         Value: EC2::NatGateway::Development0001

Outputs:
  EC2VPCDevelopment0001:
    Value: !Ref EC2VPCDevelopment0001
    Export:
      Name: EC2VPCDevelopment0001

  EC2SubnetDevelopment0001:
    Value: !Ref EC2SubnetDevelopment0001
    Export:
      Name: EC2SubnetDevelopment0001

  EC2SubnetDevelopment0002:
    Value: !Ref EC2SubnetDevelopment0002
    Export:
      Name: EC2SubnetDevelopment0002

  EC2SubnetDevelopment0003:
    Value: !Ref EC2SubnetDevelopment0003
    Export:
      Name: EC2SubnetDevelopment0003

  EC2SubnetDevelopment0004:
    Value: !Ref EC2SubnetDevelopment0004
    Export:
      Name: EC2SubnetDevelopment0004

  EC2SecurityGroupDevelopmentSSHFromPublic0001:
    Value: !Ref EC2SecurityGroupDevelopmentSSHFromPublic0001
    Export:
      Name: EC2SecurityGroupDevelopmentSSHFromPublic0001

  EC2SecurityGroupDevelopmentHTTPFromPublic0002:
    Value: !Ref EC2SecurityGroupDevelopmentHTTPFromPublic0002
    Export:
      Name: EC2SecurityGroupDevelopmentHTTPFromPublic0002

  EC2SecurityGroupDevelopmentPostgresFromPublic0003:
    Value: !Ref EC2SecurityGroupDevelopmentPostgresFromPublic0003
    Export:
      Name: EC2SecurityGroupDevelopmentPostgresFromPublic0003

  EC2SecurityGroupDevelopmentRDPFromPublic0004:
    Value: !Ref EC2SecurityGroupDevelopmentRDPFromPublic0004
    Export:
      Name: EC2SecurityGroupDevelopmentRDPFromPublic0004

  EC2SecurityGroupDevelopmentWinRMFromPublic0005:
    Value: !Ref EC2SecurityGroupDevelopmentWinRMFromPublic0005
    Export:
      Name: EC2SecurityGroupDevelopmentWinRMFromPublic0005

  EC2SecurityGroupDevelopmentJenkinsFromPublic0006:
    Value: !Ref EC2SecurityGroupDevelopmentJenkinsFromPublic0006
    Export:
      Name: EC2SecurityGroupDevelopmentJenkinsFromPublic0006

  EC2SecurityGroupDevelopmentMySQLFromPublic0007:
    Value: !Ref EC2SecurityGroupDevelopmentMySQLFromPublic0007
    Export:
      Name: EC2SecurityGroupDevelopmentMySQLFromPublic0007